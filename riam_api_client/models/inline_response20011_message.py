# coding: utf-8

"""
    APIs RISKAMERICA

    A continuación les presentamos la documentación las **APIs** **de** **RiskAmerica**, el cual es un servicio pagado ofrecido por RiskAmerica que se contrata por separado a nuestras otras ofertas de software.  Algunas consideraciones que debe tener al momento de usar las APIs: - El APIKEY o Token lo puede conseguir solicitándolo al equipo comercial de RiskAmerica - El request necesita ser enviado con el header **Accept:** **application/json** para que responda en formato **JSON** (de no ser enviado con esto se responderá en formato **XML**) - Todos los Servicios son **REST** y sus parametros pueden ser enviados tanto en **POST** como **GET** - El uso de las APIs puede llevar un cobro asociado según se pacte en el acuerdo comercial, por lo que le recomendamos ser cuidadosos en el uso de éstas para evitar sobre-cargos innecesarios. - RiskAmerica funciona con un mecanismo de **WhiteList** **de** **IPs** para las consultas de las API. Para habilitar o modificar la lista de IPs permitidas debe contactarse al mail **contacto@riskamerica.com**.   # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six
# Importing related models




class InlineResponse20011Message(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'short_name': 'str',
        'long_name': 'str',
        'id_moneda': 'str',
        'id_base_tasa': 'str',
        'id_familia_curva': 'str',
        'tiene_intraday': 'int',
        'unidad_tiempo': 'str',
        'plazo_max': 'float',
        'plazo_min': 'float'
    }

    attribute_map = {
        'id': 'id',
        'short_name': 'shortName',
        'long_name': 'longName',
        'id_moneda': 'idMoneda',
        'id_base_tasa': 'idBaseTasa',
        'id_familia_curva': 'idFamiliaCurva',
        'tiene_intraday': 'tieneIntraday',
        'unidad_tiempo': 'unidadTiempo',
        'plazo_max': 'plazoMax',
        'plazo_min': 'plazoMin'
    }

    def __init__(self, id=None, short_name=None, long_name=None, id_moneda=None, id_base_tasa=None, id_familia_curva=None, tiene_intraday=None, unidad_tiempo=None, plazo_max=None, plazo_min=None):  # noqa: E501
        """InlineResponse20011Message - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._short_name = None
        self._long_name = None
        self._id_moneda = None
        self._id_base_tasa = None
        self._id_familia_curva = None
        self._tiene_intraday = None
        self._unidad_tiempo = None
        self._plazo_max = None
        self._plazo_min = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if short_name is not None:
            self.short_name = short_name
        if long_name is not None:
            self.long_name = long_name
        if id_moneda is not None:
            self.id_moneda = id_moneda
        if id_base_tasa is not None:
            self.id_base_tasa = id_base_tasa
        if id_familia_curva is not None:
            self.id_familia_curva = id_familia_curva
        if tiene_intraday is not None:
            self.tiene_intraday = tiene_intraday
        if unidad_tiempo is not None:
            self.unidad_tiempo = unidad_tiempo
        if plazo_max is not None:
            self.plazo_max = plazo_max
        if plazo_min is not None:
            self.plazo_min = plazo_min

    @property
    def id(self):
        """Gets the id of this InlineResponse20011Message.  # noqa: E501
        Identificador de la Curva  # noqa: E501

        :return: The id of this InlineResponse20011Message.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InlineResponse20011Message.

        Identificador de la Curva  # noqa: E501

        :param id: The id of this InlineResponse20011Message.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def short_name(self):
        """Gets the short_name of this InlineResponse20011Message.  # noqa: E501
        Nombre corto de la Curva  # noqa: E501

        :return: The short_name of this InlineResponse20011Message.  # noqa: E501
        :rtype: str
        """
        return self._short_name

    @short_name.setter
    def short_name(self, short_name):
        """Sets the short_name of this InlineResponse20011Message.

        Nombre corto de la Curva  # noqa: E501

        :param short_name: The short_name of this InlineResponse20011Message.  # noqa: E501
        :type: str
        """

        self._short_name = short_name

    @property
    def long_name(self):
        """Gets the long_name of this InlineResponse20011Message.  # noqa: E501
        Nombre largo de la Curva  # noqa: E501

        :return: The long_name of this InlineResponse20011Message.  # noqa: E501
        :rtype: str
        """
        return self._long_name

    @long_name.setter
    def long_name(self, long_name):
        """Sets the long_name of this InlineResponse20011Message.

        Nombre largo de la Curva  # noqa: E501

        :param long_name: The long_name of this InlineResponse20011Message.  # noqa: E501
        :type: str
        """

        self._long_name = long_name

    @property
    def id_moneda(self):
        """Gets the id_moneda of this InlineResponse20011Message.  # noqa: E501
        Moneda base de la Curva  # noqa: E501

        :return: The id_moneda of this InlineResponse20011Message.  # noqa: E501
        :rtype: str
        """
        return self._id_moneda

    @id_moneda.setter
    def id_moneda(self, id_moneda):
        """Sets the id_moneda of this InlineResponse20011Message.

        Moneda base de la Curva  # noqa: E501

        :param id_moneda: The id_moneda of this InlineResponse20011Message.  # noqa: E501
        :type: str
        """

        self._id_moneda = id_moneda

    @property
    def id_base_tasa(self):
        """Gets the id_base_tasa of this InlineResponse20011Message.  # noqa: E501
        Identificador de la Tasa Base de la Curva  # noqa: E501

        :return: The id_base_tasa of this InlineResponse20011Message.  # noqa: E501
        :rtype: str
        """
        return self._id_base_tasa

    @id_base_tasa.setter
    def id_base_tasa(self, id_base_tasa):
        """Sets the id_base_tasa of this InlineResponse20011Message.

        Identificador de la Tasa Base de la Curva  # noqa: E501

        :param id_base_tasa: The id_base_tasa of this InlineResponse20011Message.  # noqa: E501
        :type: str
        """

        self._id_base_tasa = id_base_tasa

    @property
    def id_familia_curva(self):
        """Gets the id_familia_curva of this InlineResponse20011Message.  # noqa: E501
        Identificador de la Familia de la Curva  # noqa: E501

        :return: The id_familia_curva of this InlineResponse20011Message.  # noqa: E501
        :rtype: str
        """
        return self._id_familia_curva

    @id_familia_curva.setter
    def id_familia_curva(self, id_familia_curva):
        """Sets the id_familia_curva of this InlineResponse20011Message.

        Identificador de la Familia de la Curva  # noqa: E501

        :param id_familia_curva: The id_familia_curva of this InlineResponse20011Message.  # noqa: E501
        :type: str
        """

        self._id_familia_curva = id_familia_curva

    @property
    def tiene_intraday(self):
        """Gets the tiene_intraday of this InlineResponse20011Message.  # noqa: E501
        Detalla si la Curva tiene valores Intraday (1 = si, 0 = no)  # noqa: E501

        :return: The tiene_intraday of this InlineResponse20011Message.  # noqa: E501
        :rtype: int
        """
        return self._tiene_intraday

    @tiene_intraday.setter
    def tiene_intraday(self, tiene_intraday):
        """Sets the tiene_intraday of this InlineResponse20011Message.

        Detalla si la Curva tiene valores Intraday (1 = si, 0 = no)  # noqa: E501

        :param tiene_intraday: The tiene_intraday of this InlineResponse20011Message.  # noqa: E501
        :type: int
        """

        self._tiene_intraday = tiene_intraday

    @property
    def unidad_tiempo(self):
        """Gets the unidad_tiempo of this InlineResponse20011Message.  # noqa: E501
        Unidad de tiempo base para la Curva  # noqa: E501

        :return: The unidad_tiempo of this InlineResponse20011Message.  # noqa: E501
        :rtype: str
        """
        return self._unidad_tiempo

    @unidad_tiempo.setter
    def unidad_tiempo(self, unidad_tiempo):
        """Sets the unidad_tiempo of this InlineResponse20011Message.

        Unidad de tiempo base para la Curva  # noqa: E501

        :param unidad_tiempo: The unidad_tiempo of this InlineResponse20011Message.  # noqa: E501
        :type: str
        """

        self._unidad_tiempo = unidad_tiempo

    @property
    def plazo_max(self):
        """Gets the plazo_max of this InlineResponse20011Message.  # noqa: E501
        Plazo máximo en unidades de tiempo base de la curva  # noqa: E501

        :return: The plazo_max of this InlineResponse20011Message.  # noqa: E501
        :rtype: float
        """
        return self._plazo_max

    @plazo_max.setter
    def plazo_max(self, plazo_max):
        """Sets the plazo_max of this InlineResponse20011Message.

        Plazo máximo en unidades de tiempo base de la curva  # noqa: E501

        :param plazo_max: The plazo_max of this InlineResponse20011Message.  # noqa: E501
        :type: float
        """

        self._plazo_max = plazo_max

    @property
    def plazo_min(self):
        """Gets the plazo_min of this InlineResponse20011Message.  # noqa: E501
        Plazo mínimo en unidades de tiempo base de la curva  # noqa: E501

        :return: The plazo_min of this InlineResponse20011Message.  # noqa: E501
        :rtype: float
        """
        return self._plazo_min

    @plazo_min.setter
    def plazo_min(self, plazo_min):
        """Sets the plazo_min of this InlineResponse20011Message.

        Plazo mínimo en unidades de tiempo base de la curva  # noqa: E501

        :param plazo_min: The plazo_min of this InlineResponse20011Message.  # noqa: E501
        :type: float
        """

        self._plazo_min = plazo_min

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse20011Message, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse20011Message):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other

# coding: utf-8

"""
    APIs RISKAMERICA

    A continuación les presentamos la documentación las **APIs** **de** **RiskAmerica**, el cual es un servicio pagado ofrecido por RiskAmerica que se contrata por separado a nuestras otras ofertas de software.  Algunas consideraciones que debe tener al momento de usar las APIs: - El APIKEY o Token lo puede conseguir solicitándolo al equipo comercial de RiskAmerica - El request necesita ser enviado con el header **Accept:** **application/json** para que responda en formato **JSON** (de no ser enviado con esto se responderá en formato **XML**) - Todos los Servicios son **REST** y sus parametros pueden ser enviados tanto en **POST** como **GET** - El uso de las APIs puede llevar un cobro asociado según se pacte en el acuerdo comercial, por lo que le recomendamos ser cuidadosos en el uso de éstas para evitar sobre-cargos innecesarios. - RiskAmerica funciona con un mecanismo de **WhiteList** **de** **IPs** para las consultas de las API. Para habilitar o modificar la lista de IPs permitidas debe contactarse al mail **contacto@riskamerica.com**.   # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import riam_api_client
from riam_api_client.api.curvas_api import CurvasApi  # noqa: E501
from riam_api_client.rest import ApiException


class TestCurvasApi(unittest.TestCase):
    """CurvasApi unit test stubs"""

    def setUp(self):
        self.api = CurvasApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_curvas_informacion_get_curvas(self):
        """Test case for curvas_informacion_get_curvas

        Obtiene el listado de curvas disponibles para consultar.  # noqa: E501
        """
        pass

    def test_curvas_informacion_get_familias(self):
        """Test case for curvas_informacion_get_familias

        Obtiene el listado de familias sobre los cuales se clasifican las curvas.  # noqa: E501
        """
        pass

    def test_curvas_informacion_get_intradays(self):
        """Test case for curvas_informacion_get_intradays

        Obtiene el listado de Intradays disponibles.  # noqa: E501
        """
        pass

    def test_curvas_informacion_get_unidad_tiempo(self):
        """Test case for curvas_informacion_get_unidad_tiempo

        Obtiene el listado de unidades de tiempo que se usan para consultar las curvas.  # noqa: E501
        """
        pass

    def test_curvas_valores_get(self):
        """Test case for curvas_valores_get

        Obtiene los valores de una curva para los plazos solicitados.  # noqa: E501
        """
        pass

    def test_curvas_valores_get_all(self):
        """Test case for curvas_valores_get_all

        Obtiene todos los valores de una curva para todos los plazos comprendidos entre el plazo minimo y el maximo.  # noqa: E501
        """
        pass

    def test_curvas_valores_get_interval(self):
        """Test case for curvas_valores_get_interval

        Obtiene los valores de una curva para las fechas solicitadas a un plazo fijo.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
